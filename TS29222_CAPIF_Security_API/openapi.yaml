openapi: 3.0.0
info:
  description: |
    API for CAPIF security management.
    Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).
    All rights reserved.
  title: CAPIF_Security_API
  version: 1.2.0-alpha.1
externalDocs:
  description: 3GPP TS 29.222 V17.1.0 Common API Framework for 3GPP Northbound APIs
  url: http://www.3gpp.org/ftp/Specs/archive/29_series/29.222/
servers:
- url: '{apiRoot}/capif-security/v1'
  variables:
    apiRoot:
      default: https://example.com
      description: apiRoot as defined in subclause 7.5 of 3GPP TS 29.222.
paths:
  /trustedInvokers/{apiInvokerId}:
    delete:
      parameters:
      - description: Identifier of an individual API invoker
        explode: false
        in: path
        name: apiInvokerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content (Successful deletion of the existing subscription)
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    get:
      parameters:
      - description: Identifier of an individual API invoker
        explode: false
        in: path
        name: apiInvokerId
        required: true
        schema:
          type: string
        style: simple
      - description: When set to 'true', it indicates the CAPIF core function to send
          the authentication information of the API invoker. Set to false or omitted
          otherwise.
        explode: true
        in: query
        name: authenticationInfo
        required: false
        schema:
          type: boolean
        style: form
      - description: When set to 'true', it indicates the CAPIF core function to send
          the authorization information of the API invoker. Set to false or omitted
          otherwise.
        explode: true
        in: query
        name: authorizationInfo
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSecurity'
          description: The security related information of the API Invoker based on
            the request from the API exposing function.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Acceptable
        "414":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
    put:
      callbacks:
        notificationDestination:
          '{request.body#/notificationDestination}':
            post:
              operationId: notificationDestination_request_bodyNotificationDestinationPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SecurityNotification'
                required: true
              responses:
                "204":
                  description: No Content (successful notification)
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "400":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                "401":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unauthorized
                "403":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                "404":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                "411":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                "413":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                "415":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                "429":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                "500":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                "503":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
      parameters:
      - description: Identifier of an individual API invoker
        explode: false
        in: path
        name: apiInvokerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSecurity'
        description: create a security context for an API invoker
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSecurity'
          description: Successful created.
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according
                to the structure: {apiRoot}/capif-security/v1/trustedInvokers/{apiInvokerId}'
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "414":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /trustedInvokers/{apiInvokerId}/update:
    post:
      parameters:
      - description: Identifier of an individual API invoker
        explode: false
        in: path
        name: apiInvokerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceSecurity'
        description: Update the security context (e.g. re-negotiate the security methods).
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceSecurity'
          description: Successful updated.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /trustedInvokers/{apiInvokerId}/delete:
    post:
      parameters:
      - description: Identifier of an individual API invoker
        explode: false
        in: path
        name: apiInvokerId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityNotification'
        description: Revoke the authorization of the API invoker for APIs.
        required: true
      responses:
        "204":
          description: Successful revoked.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
  /securities/{securityId}/token:
    post:
      parameters:
      - description: Identifier of an individual API invoker
        explode: false
        in: path
        name: securityId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AccessTokenReq'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenRsp'
          description: Successful Access Token Request
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessTokenErr'
          description: Error in the Access Token Request
components:
  schemas:
    ServiceSecurity:
      description: Represents the details of the security method for each service
        API interface. When included by the API invoker, it indicates the preferred
        method of security. When included by the CAPIF core function, it indicates
        the security method to be used for the service API interface.
      example:
        notificationDestination: notificationDestination
        supportedFeatures: supportedFeatures
        securityInfo:
        - authenticationInfo: authenticationInfo
          authorizationInfo: authorizationInfo
          interfaceDetails:
            ipv6Addr: ipv6Addr
            securityMethods:
            - null
            - null
            port: 5248
            ipv4Addr: ipv4Addr
          prefSecurityMethods:
          - null
          - null
          aefId: aefId
        - authenticationInfo: authenticationInfo
          authorizationInfo: authorizationInfo
          interfaceDetails:
            ipv6Addr: ipv6Addr
            securityMethods:
            - null
            - null
            port: 5248
            ipv4Addr: ipv4Addr
          prefSecurityMethods:
          - null
          - null
          aefId: aefId
        websockNotifConfig:
          requestWebsocketUri: true
          websocketUri: websocketUri
        requestTestNotification: true
      properties:
        securityInfo:
          items:
            $ref: '#/components/schemas/SecurityInformation'
          minimum: 1
          title: securityInfo
          type: array
        notificationDestination:
          description: string providing an URI formatted according to IETF RFC 3986.
          title: notificationDestination
          type: string
        requestTestNotification:
          description: Set to true by API invoker to request the CAPIF core function
            to send a test notification as defined in in subclause 7.6. Set to false
            or omitted otherwise.
          title: requestTestNotification
          type: boolean
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
        supportedFeatures:
          description: A string used to indicate the features supported by an API
            that is used as defined in clause 6.6 in 3GPP TS 29.500. The string shall
            contain a bitmask indicating supported features in hexadecimal representation
            Each character in the string shall take a value of "0" to "9", "a" to
            "f" or "A" to "F" and shall represent the support of 4 features as described
            in tableÂ 5.2.2-3. The most significant character representing the highest-numbered
            features shall appear first in the string, and the character representing
            features 1 to 4 shall appear last in the string. The list of features
            and their numbering (starting with 1) are defined separately for each
            API. If the string contains a lower number of characters than there are
            defined features for an API, all features that would be represented by
            characters that are not present in the string are not supported
          pattern: ^[A-Fa-f0-9]*$
          title: supportedFeatures
          type: string
      required:
      - notificationDestination
      - securityInfo
      title: ServiceSecurity
      type: object
    SecurityInformation:
      description: Represents the interface details and the security method.
      example:
        authenticationInfo: authenticationInfo
        authorizationInfo: authorizationInfo
        interfaceDetails:
          ipv6Addr: ipv6Addr
          securityMethods:
          - null
          - null
          port: 5248
          ipv4Addr: ipv4Addr
        prefSecurityMethods:
        - null
        - null
        aefId: aefId
      oneOf:
      - required:
        - interfaceDetails
      - required:
        - aefId
      properties:
        interfaceDetails:
          $ref: '#/components/schemas/InterfaceDescription'
        aefId:
          description: Identifier of the API exposing function
          title: aefId
          type: string
        prefSecurityMethods:
          description: Security methods preferred by the API invoker for the API interface.
          items:
            $ref: '#/components/schemas/SecurityMethod'
          minItems: 1
          title: prefSecurityMethods
          type: array
        selSecurityMethod:
          $ref: '#/components/schemas/SecurityMethod'
        authenticationInfo:
          description: Authentication related information
          title: authenticationInfo
          type: string
        authorizationInfo:
          description: Authorization related information
          title: authorizationInfo
          type: string
      required:
      - prefSecurityMethods
      title: SecurityInformation
      type: object
    SecurityNotification:
      description: Represents revoked authorization notification details.
      example:
        apiInvokerId: apiInvokerId
        aefId: aefId
        apiIds:
        - apiIds
        - apiIds
      properties:
        apiInvokerId:
          description: String identifying the API invoker assigned by the CAPIF core
            function.
          type: string
        aefId:
          description: String identifying the AEF.
          type: string
        apiIds:
          description: Identifier of the service API
          items:
            type: string
          minItems: 1
          type: array
        cause:
          $ref: '#/components/schemas/Cause'
      required:
      - apiIds
      - apiInvokerId
      - cause
      type: object
    AccessTokenReq:
      description: Represents the access token request information.
      format: x-www-form-urlencoded
      properties:
        grant_type:
          enum:
          - client_credentials
          type: string
        client_id:
          type: string
        client_secret:
          type: string
        scope:
          type: string
      required:
      - client_id
      - grant_type
    AccessTokenRsp:
      description: Represents the access token response information.
      example:
        access_token: access_token
        scope: scope
        token_type: Bearer
        expires_in: 0
      properties:
        access_token:
          description: JWS Compact Serialized representation of JWS signed JSON object
            (AccessTokenClaims)
          title: access_token
          type: string
        token_type:
          enum:
          - Bearer
          title: token_type
          type: string
        expires_in:
          description: Unsigned integer identifying a period of time in units of seconds.
          minimum: 0
          title: expires_in
          type: integer
        scope:
          title: scope
          type: string
      required:
      - access_token
      - expires_in
      - token_type
      title: AccessTokenRsp
      type: object
    AccessTokenClaims:
      description: Represents the claims data structure for the access token.
      properties:
        iss:
          type: string
        scope:
          type: string
        exp:
          description: Unsigned integer identifying a period of time in units of seconds.
          minimum: 0
          title: expires_in
          type: integer
      required:
      - exp
      - iss
      - scope
      type: object
    AccessTokenErr:
      description: Represents an error in the access token request.
      properties:
        error:
          enum:
          - invalid_request
          - invalid_client
          - invalid_grant
          - unauthorized_client
          - unsupported_grant_type
          - invalid_scope
          title: error
          type: string
        error_description:
          title: error_description
          type: string
        error_uri:
          title: error_uri
          type: string
      required:
      - error
      title: AccessTokenErr
      type: object
    Cause:
      anyOf:
      - $ref: '#/components/schemas/Cause_anyOf'
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
        type: string
      description: |
        Possible values are - OVERLIMIT_USAGE: The revocation of the authorization of the API invoker is due to the overlimit usage of the service API - UNEXPECTED_REASON: The revocation of the authorization of the API invoker is due to unexpected reason.
      title: Cause
    ProblemDetails:
      description: Represents additional information and details on an error response.
      properties:
        type:
          description: string providing an URI formatted according to IETF RFC 3986.
          title: notificationDestination
          type: string
        title:
          description: A short, human-readable summary of the problem type. It should
            not change from occurrence to occurrence of the problem.
          title: title
          type: string
        status:
          description: The HTTP status code for this occurrence of the problem.
          title: status
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          title: detail
          type: string
        instance:
          description: string providing an URI formatted according to IETF RFC 3986.
          title: notificationDestination
          type: string
        cause:
          description: A machine-readable application error cause specific to this
            occurrence of the problem. This IE should be present and provide application-related
            error information, if available.
          title: cause
          type: string
        invalidParams:
          description: Description of invalid parameters, for a request rejected due
            to invalid parameters.
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          title: invalidParams
          type: array
        supportedFeatures:
          description: A string used to indicate the features supported by an API
            that is used as defined in clause 6.6 in 3GPP TS 29.500. The string shall
            contain a bitmask indicating supported features in hexadecimal representation
            Each character in the string shall take a value of "0" to "9", "a" to
            "f" or "A" to "F" and shall represent the support of 4 features as described
            in tableÂ 5.2.2-3. The most significant character representing the highest-numbered
            features shall appear first in the string, and the character representing
            features 1 to 4 shall appear last in the string. The list of features
            and their numbering (starting with 1) are defined separately for each
            API. If the string contains a lower number of characters than there are
            defined features for an API, all features that would be represented by
            characters that are not present in the string are not supported
          pattern: ^[A-Fa-f0-9]*$
          title: supportedFeatures
          type: string
      title: ProblemDetails
      type: object
    Uri:
      description: string providing an URI formatted according to IETF RFC 3986.
      title: notificationDestination
      type: string
    InvalidParam:
      description: Represents the description of invalid parameters, for a request
        rejected due to invalid parameters.
      properties:
        param:
          description: Attribute's name encoded as a JSON Pointer, or header's name.
          title: param
          type: string
        reason:
          description: A human-readable reason, e.g. "must be a positive integer".
          title: reason
          type: string
      required:
      - param
      title: InvalidParam
      type: object
    WebsockNotifConfig:
      description: Represents the configuration information for the delivery of notifications
        over Websockets.
      example:
        requestWebsocketUri: true
        websocketUri: websocketUri
      properties:
        websocketUri:
          description: string formatted according to IETF RFC 3986 identifying a referenced
            resource.
          title: Link
          type: string
        requestWebsocketUri:
          description: Set by the SCS/AS to indicate that the Websocket delivery is
            requested.
          title: requestWebsocketUri
          type: boolean
      title: WebsockNotifConfig
      type: object
    Link:
      description: string formatted according to IETF RFC 3986 identifying a referenced
        resource.
      title: Link
      type: string
    SupportedFeatures:
      description: A string used to indicate the features supported by an API that
        is used as defined in clause 6.6 in 3GPP TS 29.500. The string shall contain
        a bitmask indicating supported features in hexadecimal representation Each
        character in the string shall take a value of "0" to "9", "a" to "f" or "A"
        to "F" and shall represent the support of 4 features as described in tableÂ 5.2.2-3.
        The most significant character representing the highest-numbered features
        shall appear first in the string, and the character representing features
        1 to 4 shall appear last in the string. The list of features and their numbering
        (starting with 1) are defined separately for each API. If the string contains
        a lower number of characters than there are defined features for an API, all
        features that would be represented by characters that are not present in the
        string are not supported
      pattern: ^[A-Fa-f0-9]*$
      title: supportedFeatures
      type: string
    InterfaceDescription:
      description: Represents the description of an API's interface.
      example:
        ipv6Addr: ipv6Addr
        securityMethods:
        - null
        - null
        port: 5248
        ipv4Addr: ipv4Addr
      oneOf:
      - required:
        - ipv4Addr
      - required:
        - ipv6Addr
      properties:
        ipv4Addr:
          description: string identifying a Ipv4 address formatted in the "dotted
            decimal" notation as defined in IETF RFC 1166.
          title: Ipv4Addr
          type: string
        ipv6Addr:
          description: string identifying a Ipv6 address formatted according to clause
            4 in IETF RFC 5952. The mixed Ipv4 Ipv6 notation according to clause 5
            of IETF RFC 5952 shall not be used.
          title: Ipv6Addr
          type: string
        port:
          description: Unsigned integer with valid values between 0 and 65535.
          maximum: 65535
          minimum: 0
          title: Port
          type: integer
        securityMethods:
          description: Security methods supported by the interface, it take precedence
            over the security methods provided in AefProfile, for this specific interface.
          items:
            $ref: '#/components/schemas/SecurityMethod'
          minItems: 1
          title: securityMethods
          type: array
      title: InterfaceDescription
      type: object
    SecurityMethod:
      anyOf:
      - $ref: '#/components/schemas/SecurityMethod_anyOf'
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
        type: string
      description: |
        Possible values are - PSK: Security method 1 (Using TLS-PSK) as described in 3GPP TS 33.122 - PKI: Security method 2 (Using PKI) as described in 3GPP TS 33.122 - OAUTH: Security method 3 (TLS with OAuth token) as described in 3GPP TS 33.122
      title: SecurityMethod
    DurationSec:
      description: Unsigned integer identifying a period of time in units of seconds.
      minimum: 0
      title: expires_in
      type: integer
    Ipv4Addr:
      description: string identifying a Ipv4 address formatted in the "dotted decimal"
        notation as defined in IETF RFC 1166.
      title: Ipv4Addr
      type: string
    Ipv6Addr:
      description: string identifying a Ipv6 address formatted according to clause
        4 in IETF RFC 5952. The mixed Ipv4 Ipv6 notation according to clause 5 of
        IETF RFC 5952 shall not be used.
      title: Ipv6Addr
      type: string
    Port:
      description: Unsigned integer with valid values between 0 and 65535.
      maximum: 65535
      minimum: 0
      title: Port
      type: integer
    Cause_anyOf:
      enum:
      - OVERLIMIT_USAGE
      - UNEXPECTED_REASON
      title: Cause_anyOf
      type: string
    SecurityMethod_anyOf:
      enum:
      - PSK
      - PKI
      - OAUTH
      title: SecurityMethod_anyOf
      type: string
