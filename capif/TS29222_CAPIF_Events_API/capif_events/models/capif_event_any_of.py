# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from capif_events.models.base_model_ import Model
from capif_events import util


class CAPIFEventAnyOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SERVICE_API_AVAILABLE = "SERVICE_API_AVAILABLE"
    SERVICE_API_UNAVAILABLE = "SERVICE_API_UNAVAILABLE"
    SERVICE_API_UPDATE = "SERVICE_API_UPDATE"
    API_INVOKER_ONBOARDED = "API_INVOKER_ONBOARDED"
    API_INVOKER_OFFBOARDED = "API_INVOKER_OFFBOARDED"
    SERVICE_API_INVOCATION_SUCCESS = "SERVICE_API_INVOCATION_SUCCESS"
    SERVICE_API_INVOCATION_FAILURE = "SERVICE_API_INVOCATION_FAILURE"
    ACCESS_CONTROL_POLICY_UPDATE = "ACCESS_CONTROL_POLICY_UPDATE"
    ACCESS_CONTROL_POLICY_UNAVAILABLE = "ACCESS_CONTROL_POLICY_UNAVAILABLE"
    API_INVOKER_AUTHORIZATION_REVOKED = "API_INVOKER_AUTHORIZATION_REVOKED"
    API_INVOKER_UPDATED = "API_INVOKER_UPDATED"
    API_TOPOLOGY_HIDING_CREATED = "API_TOPOLOGY_HIDING_CREATED"
    API_TOPOLOGY_HIDING_REVOKED = "API_TOPOLOGY_HIDING_REVOKED"
    def __init__(self):  # noqa: E501
        """CAPIFEventAnyOf - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'CAPIFEventAnyOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CAPIFEvent_anyOf of this CAPIFEventAnyOf.  # noqa: E501
        :rtype: CAPIFEventAnyOf
        """
        return util.deserialize_model(dikt, cls)
