{
  "ProblemDetails": {
    "mandatory_attributes": {},
    "optional_attributes": {
      "type": "string",
      "title": "string",
      "status": "integer",
      "detail": "string",
      "instance": "string",
      "cause": "string",
      "invalidParams": "InvalidParam",
      "supportedFeatures": "SupportedFeatures"
    }
  },
  "InvalidParam": {
    "mandatory_attributes": {
      "param": "string"
    },
    "optional_attributes": {
      "reason": "string"
    }
  },
  "APIInvokerEnrolmentDetails": {
    "mandatory_attributes": {
      "apiInvokerId": "string",
      "onboardingInformation": "OnboardingInformation",
      "notificationDestination": "string"
    },
    "optional_attributes": {
      "requestTestNotification": "boolean",
      "websockNotifConfig": "WebsockNotifConfig",
      "apiList": "ServiceAPIDescription",
      "apiInvokerInformation": "string",
      "supportedFeatures": "SupportedFeatures"
    }
  },
  "OnboardingInformation": {
    "mandatory_attributes": {
      "apiInvokerPublicKey": "string"
    },
    "optional_attributes": {
      "apiInvokerCertificate": "string",
      "onboardingSecret": "string"
    }
  },
  "WebsockNotifConfig": {
    "mandatory_attributes": {},
    "optional_attributes": {
      "websocketUri": "string",
      "requestWebsocketUri": "boolean"
    }
  },
  "ServiceAPIDescription": {
    "mandatory_attributes": {
      "apiName": "string"
    },
    "optional_attributes": {
      "apiId": "string",
      "aefProfiles": "AefProfile",
      "description": "string",
      "supportedFeatures": "SupportedFeatures",
      "shareableInfo": "ShareableInformation",
      "serviceAPICategory": "string",
      "apiSuppFeats": "SupportedFeatures",
      "pubApiPath": "PublishedApiPath",
      "ccfId": "string"
    }
  },
  "AefProfile": {
    "mandatory_attributes": {
      "aefId": "string",
      "versions": "Version"
    },
    "optional_attributes": {
      "protocol": "Protocol",
      "dataFormat": "DataFormat",
      "securityMethods": "SecurityMethod",
      "domainName": "string",
      "interfaceDescriptions": "InterfaceDescription",
      "aefLocation": "AefLocation"
    }
  },
  "Version": {
    "mandatory_attributes": {
      "apiVersion": "string"
    },
    "optional_attributes": {
      "expiry": "string",
      "resources": "Resource",
      "custOperations": "CustomOperation"
    }
  },
  "Resource": {
    "mandatory_attributes": {
      "resourceName": "string",
      "commType": "CommunicationType",
      "uri": "string"
    },
    "optional_attributes": {
      "custOpName": "string",
      "operations": "Operation",
      "description": "string"
    }
  },
  "CommunicationType": {
    "enum": ["REQUEST_RESPONSE", "SUBSCRIBE_NOTIFY"]
  },
  "Operation": {
    "enum": ["GET", "POST", "PUT", "PATCH", "DELETE"]
  },
  "CustomOperation": {
    "mandatory_attributes": {
      "commType": "CommunicationType",
      "custOpName": "string"
    },
    "optional_attributes": {
      "operations": "Operation",
      "description": "string"
    }
  },
  "Protocol": {
    "enum": ["HTTP_1_1", "HTTP_2"]
  },
  "DataFormat": {
    "enum": ["JSON"]
  },
  "SecurityMethod": {
    "enum": ["PSK", "PKI", "OAUTH"]
  },
  "InterfaceDescription": {
    "mandatory_attributes": {},
    "optional_attributes": {
      "ipv4Addr": "string",
      "ipv6Addr": "string",
      "port": "integer",
      "securityMethods": "SecurityMethod"
    }
  },
  "AefLocation": {
    "mandatory_attributes": {},
    "optional_attributes": {
      "civicAddr": "CivicAddress",
      "geoArea": "GeographicArea",
      "dcId": "string"
    }
  },
  "CivicAddress": {
    "mandatory_attributes": {},
    "optional_attributes": {
      "country": "string",
      "A1": "string",
      "A2": "string",
      "A3": "string",
      "A4": "string",
      "A5": "string",
      "A6": "string",
      "PRD": "string",
      "POD": "string",
      "STS": "string",
      "HNO": "string",
      "HNS": "string",
      "LMK": "string",
      "LOC": "string",
      "NAM": "string",
      "PC": "string",
      "BLD": "string",
      "UNIT": "string",
      "FLR": "string",
      "ROOM": "string",
      "PLC": "string",
      "PCN": "string",
      "POBOX": "string",
      "ADDCODE": "string",
      "SEAT": "string",
      "RD": "string",
      "RDSEC": "string",
      "RDBR": "string",
      "RDSUBBR": "string",
      "PRM": "string",
      "POM": "string",
      "usageRules": "string",
      "method": "string",
      "providedBy": "string"
    }
  },
  "GeographicArea": {
    "Check": false
  },
  "ShareableInformation": {
    "mandatory_attributes": {
      "isShareable": "boolean"
    },
    "optional_attributes": {
      "capifProvDoms": "string"
    }
  },
  "PublishedApiPath": {
    "mandatory_attributes": {},
    "optional_attributes": {
      "ccfIds": "string"
    }
  },
  "EventSubscription": {
    "mandatory_attributes": {
      "events": "CAPIFEvent",
      "notificationDestination": "string"
    },
    "optional_attributes": {
      "eventFilters": "CAPIFEventFilter",
      "eventReq": "ReportingInformation",
      "requestTestNotification": "boolean",
      "websockNotifConfig": "WebsockNotifConfig",
      "supportedFeatures": "SupportedFeatures"
    }
  },
  "CAPIFEvent": {
    "enum": [
      "SERVICE_API_AVAILABLE",
      "SERVICE_API_UNAVAILABLE",
      "SERVICE_API_UPDATE",
      "API_INVOKER_ONBOARDED",
      "API_INVOKER_OFFBOARDED",
      "SERVICE_API_INVOCATION_SUCCESS",
      "SERVICE_API_INVOCATION_FAILURE",
      "ACCESS_CONTROL_POLICY_UPDATE",
      "ACCESS_CONTROL_POLICY_UNAVAILABLE",
      "API_INVOKER_AUTHORIZATION_REVOKED",
      "API_INVOKER_UPDATED",
      "API_TOPOLOGY_HIDING_CREATED",
      "API_TOPOLOGY_HIDING_REVOKED"
    ]
  },
  "CAPIFEventFilter": {
    "mandatory_attributes": {},
    "optional_attributes": {
      "apiIds": "string",
      "apiInvokerIds": "string",
      "aefIds": "string"
    }
  },
  "ReportingInformation": {
    "mandatory_attributes": {},
    "optional_attributes": {
      "immRep": "boolean",
      "notifMethod": "NotificationMethod",
      "maxReportNbr": "integer",
      "monDur": "string",
      "repPeriod": "integer",
      "sampRatio": "integer",
      "partitionCriteria": "PartitioningCriteria",
      "grpRepTime": "integer",
      "notifFlag": "NotificationFlag"
    }
  },
  "NotificationMethod": {
    "enum": ["PERIODIC", "ONE_TIME", "ON_EVENT_DETECTION"]
  },
  "PartitioningCriteria": {
    "enum": ["TAC", "SUBPLMN", "GEOAREA", "SNSSAI", "DNN"]
  },
  "NotificationFlag": {
    "enum": ["ACTIVATE", "DEACTIVATE", "RETRIEVAL"]
  }
}
