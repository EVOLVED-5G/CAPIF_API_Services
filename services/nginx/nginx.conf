worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /tmp/nginx.pid;

events {
    worker_connections   1024;
}

http {
        server {
              listen      8080;

              location /ca-root {
                proxy_pass http://easy-rsa:8080/ca-root;
              }
              location /sign-csr {
                proxy_pass http://easy-rsa:8080/sign-csr;
              }
              location /certdata {
                proxy_pass http://easy-rsa:8080/certdata;
              }
              location /register {
                proxy_pass http://jwtauth:8080/register;
              }
              location /testdata {
                proxy_pass http://jwtauth:8080/testdata;
              }
              location /getauth {
                proxy_pass http://jwtauth:8080/getauth;
              }

        }

        server {
              listen      443 ssl;
              # server_name capifcore;
              # server_name openshift.evolved-5g.eu;

              ssl_certificate      /etc/nginx/certs/server.crt;
              ssl_certificate_key  /etc/nginx/certs/server.key;
              ssl_client_certificate  /etc/nginx/certs/ca.crt;
              ssl_verify_client       optional;

              location / {
                  proxy_pass $scheme://$http_host/api-invoker-management/v1/ui/;
              }

              location /api-invoker-management {
                proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
                proxy_pass http://api-invoker-management:8080;
              }

              location /service-apis {
                if ($ssl_client_verify != SUCCESS) {
                    return 403;
                }
                proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
                proxy_pass http://service-apis:8080;
              }

              location /published-apis {
                if ($ssl_client_verify != SUCCESS) {
                    return 403;
                }
                proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
                proxy_pass http://published-apis:8080;
              }

              location /api-invocation-logs {
                if ($ssl_client_verify != SUCCESS) {
                    return 403;
                }
                proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
                proxy_pass http://api-invocation-logs:8080;
              }

              location /logs {
                if ($ssl_client_verify != SUCCESS) {
                    return 403;
                }
                proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
                proxy_pass http://logs:8080;
              }

              location /capif-security {
                if ($ssl_client_verify != SUCCESS) {
                    return 403;
                }
                proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
                proxy_pass http://capif-security:8080;
              }

              location /capif-events {
                if ($ssl_client_verify != SUCCESS) {
                    return 403;
                }
                proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
                proxy_pass http://capif-events:8080;
              }

              location /api-provider-management {
                if ($ssl_client_verify != SUCCESS) {
                    return 403;
                }
                proxy_set_header X-SSL-Client-Cert $ssl_client_cert;
                proxy_pass http://api-provider-management:8080;
              }
        }
}

daemon off;