version: '3.7'

services:
#  aef-security:
#    build: TS29222_AEF_Security_API/.
#    expose:
#      - "8080"
#    image: dockerhub.hi.inet/evolved-5g/aef/security_api:latest
  redis:
    image: "redis:alpine"
    command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - $PWD/redis-data:/var/lib/redis
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
  api-invoker-management:
    build:
      context: ./TS29222_CAPIF_API_Invoker_Management_API
    expose:
      - "8080"
    volumes:
      - ./TS29222_CAPIF_API_Invoker_Management_API:/usr/src/app
    restart: unless-stopped
    image: dockerhub.hi.inet/evolved-5g/capif/api_invoker_management_api:latest
    depends_on:
    - redis
    - nginx
  api-provider-management:
    build: TS29222_CAPIF_API_Provider_Management_API/.
    expose:
      - "8080"
    image: dockerhub.hi.inet/evolved-5g/capif/api_provider_management_api:latest
    depends_on:
      - redis
      - nginx

#  access-control-policy:
#    build: TS29222_CAPIF_Access_Control_Policy_API/.
#    expose:
#      - "8080"
#    image: dockerhub.hi.inet/evolved-5g/capif/access_control_policy_api:latest
  logs:
    build:
      context: ./TS29222_CAPIF_Auditing_API
    expose:
      - "8080"
    volumes:
      - ./TS29222_CAPIF_Auditing_API:/usr/src/app
    restart: unless-stopped
    image: dockerhub.hi.inet/evolved-5g/capif/auditing_api:latest
  service-apis:
    build:
      context: ./TS29222_CAPIF_Discover_Service_API
    expose:
      - "8080"
    volumes:
      - ./TS29222_CAPIF_Discover_Service_API:/usr/src/app
    restart: unless-stopped
    image: dockerhub.hi.inet/evolved-5g/capif/discover_service_api:latest
    depends_on:
    - mongo
  capif-events:
    build: TS29222_CAPIF_Events_API/.
    expose:
      - "8080"
    volumes:
      - ./TS29222_CAPIF_Events_API:/usr/src/app
    image: dockerhub.hi.inet/evolved-5g/capif/events_api:latest
    depends_on:
      - redis
      - mongo
  api-invocation-logs:
    build:
      context: ./TS29222_CAPIF_Logging_API_Invocation_API
    expose:
      - "8080"
    volumes:
      - ./TS29222_CAPIF_Logging_API_Invocation_API:/usr/src/app
    restart: unless-stopped
    image: dockerhub.hi.inet/evolved-5g/capif/api_invocation_logs_api:latest
    environment:
      - CAPIF_HOSTNAME=${CAPIF_HOSTNAME}
  published-apis:
    build: TS29222_CAPIF_Publish_Service_API/.
    expose:
      - "8080"
    volumes:
      - ./TS29222_CAPIF_Publish_Service_API:/usr/src/app
    restart: unless-stopped
    image: dockerhub.hi.inet/evolved-5g/capif/publish_service_api:latest
    depends_on:
      - redis
      - mongo
  capif-routing-info:
    build: TS29222_CAPIF_Routing_Info_API/.
    expose:
      - "8080"
    image: dockerhub.hi.inet/evolved-5g/capif/routing_info_api:latest
  capif-security:
    build: TS29222_CAPIF_Security_API/.
    expose:
      - "8080"
    volumes:
      - ./TS29222_CAPIF_Security_API:/usr/src/app
    restart: unless-stopped
    image: dockerhub.hi.inet/evolved-5g/capif/security_api:latest
    environment:
      - CAPIF_HOSTNAME=${CAPIF_HOSTNAME}
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      - redis
      - nginx
  easy-rsa:
    build:
      context: ./easy_rsa
    expose:
      - "8080"
    restart: unless-stopped
    image: dockerhub.hi.inet/evolved-5g/easy-rsa:latest
  jwtauth:
    build:
      context: ./jwt_auth
    expose:
      - "8080"
    volumes:
      - ./jwt_auth:/usr/src/app
    restart: unless-stopped
    image: dockerhub.hi.inet/evolved-5g/jwtauth:latest
    depends_on:
      - easy-rsa
      - mongo
      - redis
      - nginx
  mongo:
    image: mongo:6.0.2
    logging:
      driver: 'none'
    restart: unless-stopped
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    logging:
      driver: 'none'
    restart: unless-stopped
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    depends_on:
      - mongo
  nginx:
    build:
      context: ./nginx
    ports:
      - "8080:8080"
      - "443:443"
    image: dockerhub.hi.inet/evolved-5g/capif/nginx:latest
    environment:
      - CAPIF_HOSTNAME=${CAPIF_HOSTNAME}
    hostname: ${CAPIF_HOSTNAME}
    volumes:
      - ./nginx/certs:/etc/nginx/certs
    restart: unless-stopped
    depends_on:
      #- api-invoker-management
      - easy-rsa
      - redis
#      - aef-security
#      - api-invoker-management
      #- api-provider-management
#      - access-control-policy
      - service-apis
      - api-invocation-logs
      - published-apis
#      - capif-routing-info
      #- capif-security
      - capif-events
      - logs


