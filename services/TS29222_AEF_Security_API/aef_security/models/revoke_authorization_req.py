# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from aef_security.models.base_model_ import Model
from aef_security.models.security_notification import SecurityNotification
import re
from aef_security import util

from aef_security.models.security_notification import SecurityNotification  # noqa: E501
import re  # noqa: E501

class RevokeAuthorizationReq(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, revoke_info=None, supported_features=None):  # noqa: E501
        """RevokeAuthorizationReq - a model defined in OpenAPI

        :param revoke_info: The revoke_info of this RevokeAuthorizationReq.  # noqa: E501
        :type revoke_info: SecurityNotification
        :param supported_features: The supported_features of this RevokeAuthorizationReq.  # noqa: E501
        :type supported_features: str
        """
        self.openapi_types = {
            'revoke_info': SecurityNotification,
            'supported_features': str
        }

        self.attribute_map = {
            'revoke_info': 'revokeInfo',
            'supported_features': 'supportedFeatures'
        }

        self._revoke_info = revoke_info
        self._supported_features = supported_features

    @classmethod
    def from_dict(cls, dikt) -> 'RevokeAuthorizationReq':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RevokeAuthorizationReq of this RevokeAuthorizationReq.  # noqa: E501
        :rtype: RevokeAuthorizationReq
        """
        return util.deserialize_model(dikt, cls)

    @property
    def revoke_info(self):
        """Gets the revoke_info of this RevokeAuthorizationReq.


        :return: The revoke_info of this RevokeAuthorizationReq.
        :rtype: SecurityNotification
        """
        return self._revoke_info

    @revoke_info.setter
    def revoke_info(self, revoke_info):
        """Sets the revoke_info of this RevokeAuthorizationReq.


        :param revoke_info: The revoke_info of this RevokeAuthorizationReq.
        :type revoke_info: SecurityNotification
        """
        if revoke_info is None:
            raise ValueError("Invalid value for `revoke_info`, must not be `None`")  # noqa: E501

        self._revoke_info = revoke_info

    @property
    def supported_features(self):
        """Gets the supported_features of this RevokeAuthorizationReq.

        A string used to indicate the features supported by an API that is used as defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\", \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in table 5.2.2-3. The most significant character representing the highest-numbered features shall appear first in the string, and the character representing features 1 to 4 shall appear last in the string. The list of features and their numbering (starting with 1) are defined separately for each API. If the string contains a lower number of characters than there are defined features for an API, all features that would be represented by characters that are not present in the string are not supported  # noqa: E501

        :return: The supported_features of this RevokeAuthorizationReq.
        :rtype: str
        """
        return self._supported_features

    @supported_features.setter
    def supported_features(self, supported_features):
        """Sets the supported_features of this RevokeAuthorizationReq.

        A string used to indicate the features supported by an API that is used as defined in clause 6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\", \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in table 5.2.2-3. The most significant character representing the highest-numbered features shall appear first in the string, and the character representing features 1 to 4 shall appear last in the string. The list of features and their numbering (starting with 1) are defined separately for each API. If the string contains a lower number of characters than there are defined features for an API, all features that would be represented by characters that are not present in the string are not supported  # noqa: E501

        :param supported_features: The supported_features of this RevokeAuthorizationReq.
        :type supported_features: str
        """
        if supported_features is None:
            raise ValueError("Invalid value for `supported_features`, must not be `None`")  # noqa: E501
        if supported_features is not None and not re.search(r'^[A-Fa-f0-9]*$', supported_features):  # noqa: E501
            raise ValueError("Invalid value for `supported_features`, must be a follow pattern or equal to `/^[A-Fa-f0-9]*$/`")  # noqa: E501

        self._supported_features = supported_features
