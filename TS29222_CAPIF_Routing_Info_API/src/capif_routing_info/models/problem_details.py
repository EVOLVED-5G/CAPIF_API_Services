# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401
from capif_routing_info.models.invalid_param import InvalidParam


class ProblemDetails(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    ProblemDetails - a model defined in OpenAPI

        type: The type of this ProblemDetails [Optional].
        title: The title of this ProblemDetails [Optional].
        status: The status of this ProblemDetails [Optional].
        detail: The detail of this ProblemDetails [Optional].
        instance: The instance of this ProblemDetails [Optional].
        cause: The cause of this ProblemDetails [Optional].
        invalid_params: The invalid_params of this ProblemDetails [Optional].
        supported_features: The supported_features of this ProblemDetails [Optional].
    """

    type: Optional[str] = None
    title: Optional[str] = None
    status: Optional[int] = None
    detail: Optional[str] = None
    instance: Optional[str] = None
    cause: Optional[str] = None
    invalid_params: Optional[List[InvalidParam]] = None
    supported_features: Optional[str] = None

    @validator("supported_features")
    def supported_features_pattern(cls, value):
        assert value is not None and re.match(r"^[A-Fa-f0-9]*$", value)
        return value

ProblemDetails.update_forward_refs()
