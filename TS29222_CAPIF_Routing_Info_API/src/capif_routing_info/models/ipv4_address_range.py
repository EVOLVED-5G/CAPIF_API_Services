# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, validator  # noqa: F401


class Ipv4AddressRange(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    Ipv4AddressRange - a model defined in OpenAPI

        start: The start of this Ipv4AddressRange [Optional].
        end: The end of this Ipv4AddressRange [Optional].
    """

    start: Optional[str] = None
    end: Optional[str] = None

    @validator("start")
    def start_pattern(cls, value):
        assert value is not None and re.match(r"^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$", value)
        return value

    @validator("end")
    def end_pattern(cls, value):
        assert value is not None and re.match(r"^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$", value)
        return value

Ipv4AddressRange.update_forward_refs()
